name: Build Release

# This sets up the trigger for the action to run, which is when a release is created.
on:
  release:
    types: [created]

jobs:
  # The workflow has one job called "build".
  build:
    # The job will run on the latest version of Ubuntu.
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job.
    steps:
      # This checks out the repository code into the $GITHUB_WORKSPACE directory.
      - uses: actions/checkout@v3

      # This sets up JDK 17.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'microsoft'
          java-version: '17'

      # This gives execute permission to gradlew.
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # This builds the project using Gradle.
      - name: Build with Gradle
        run: ./gradlew build

      # This uploads build artifacts as artifacts.
      - uses: actions/upload-artifact@v3
        with:
          name: Artifacts
          path: build/libs/

      # This uses GitHub's API to get the name of the release file.
      - uses: actions/github-script@v6
        id: fname
        with:
          result-encoding: string
          script: |
            const fs = require("fs")
            return fs.readdirSync("build/libs/").filter(e => !e.endsWith("dev.jar") && !e.endsWith("sources.jar") && e.endsWith(".jar"))[0]

      # This creates the GitHub release using the name of the release file obtained in the previous step.
      - name: Release
        id: uploadrelease
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          files: build/libs/${{ steps.fname.outputs.result }}